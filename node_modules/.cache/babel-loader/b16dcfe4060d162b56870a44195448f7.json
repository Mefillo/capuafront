{"ast":null,"code":"var _jsxFileName = \"/Users/artem/Desktop/python/capua/front/src/App.js\";\nimport React from 'react';\nimport './App.css';\nimport { Route, Switch } from 'react-router-dom';\nimport HomePage from './pages/homepage.component';\nimport DetailedProduct from './components/detailed-product/detailed-product.component';\nimport About from './pages/about.page';\nimport Contact from './pages/contact.page';\nimport SERVER_URL from './global';\nimport './style.scss';\nimport { createHttpLink } from 'apollo-link-http';\nimport { InMemoryCache } from 'apollo-cache-inmemory';\nimport { ApolloClient, gql } from 'apollo-boost';\nimport { css } from '@emotion/core';\nimport ClipLoader from 'react-spinners/ClipLoader';\nconst httpLink = createHttpLink({\n  uri: SERVER_URL + 'graphql/'\n});\nconst cache = new InMemoryCache();\nconst client = new ApolloClient({\n  link: httpLink,\n  cache\n});\nconst override = css`\ndisplay: block;\nmargin: auto;\nborder-color: purple;\ntop:50%;\nleft:50%;\n`;\n\nclass App extends React.Component {\n  componentDidMount() {\n    client.query({\n      query: gql`{\n          products{name}}`\n    }).then(response => {\n      const array = response.data.products.map(x => x.name);\n      this.setState({\n        names: array\n      });\n    }).then(this.setState({\n      loading: false\n    })).catch();\n  }\n\n  constructor() {\n    super();\n    this.state = {\n      loading: false,\n      names: []\n    };\n  }\n\n  render() {\n    if (!this.state.loading) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Switch, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Route, {\n        exact: true,\n        path: \"/\",\n        render: () => /*#__PURE__*/React.createElement(HomePage, {\n          names: this.state.names,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 51\n          }\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }\n      }), this.state.names.map(name => /*#__PURE__*/React.createElement(Route, {\n        key: name,\n        exact: true,\n        path: '/' + name + '/',\n        render: name => /*#__PURE__*/React.createElement(DetailedProduct, {\n          key: name,\n          name: name,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 83\n          }\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 15\n        }\n      })), /*#__PURE__*/React.createElement(Route, {\n        exact: true,\n        path: \"/about/\",\n        component: About,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(Route, {\n        exact: true,\n        path: \"/contact/\",\n        component: Contact,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }\n      })));\n    } else {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"sweet-loading\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(ClipLoader, {\n        css: override,\n        size: 150,\n        color: '#123abc',\n        loading: !this.state.loading,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }\n      })));\n    }\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/artem/Desktop/python/capua/front/src/App.js"],"names":["React","Route","Switch","HomePage","DetailedProduct","About","Contact","SERVER_URL","createHttpLink","InMemoryCache","ApolloClient","gql","css","ClipLoader","httpLink","uri","cache","client","link","override","App","Component","componentDidMount","query","then","response","array","data","products","map","x","name","setState","names","loading","catch","constructor","state","render"],"mappings":"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","sourcesContent":["import React from 'react'\nimport './App.css'\nimport { Route, Switch } from 'react-router-dom'\nimport HomePage from './pages/homepage.component'\nimport DetailedProduct from './components/detailed-product/detailed-product.component'\nimport About from './pages/about.page'\nimport Contact from './pages/contact.page'\nimport SERVER_URL from './global'\n\nimport './style.scss'\n\nimport { createHttpLink } from 'apollo-link-http'\nimport { InMemoryCache } from 'apollo-cache-inmemory'\nimport { ApolloClient, gql } from 'apollo-boost'\n\nimport { css } from '@emotion/core'\nimport ClipLoader from 'react-spinners/ClipLoader'\n\nconst httpLink = createHttpLink({\n  uri: SERVER_URL + 'graphql/'\n})\nconst cache = new InMemoryCache()\nconst client = new ApolloClient({\n  link: httpLink,\n  cache\n})\nconst override = css`\ndisplay: block;\nmargin: auto;\nborder-color: purple;\ntop:50%;\nleft:50%;\n`\n\nclass App extends React.Component {\n  componentDidMount () {\n    client.query({\n      query: gql`{\n          products{name}}`\n    })\n      .then(response => {\n        const array = response.data.products.map((x) => x.name)\n        this.setState({ names: array })\n      })\n      .then(this.setState({ loading: false })).catch()\n  }\n\n  constructor () {\n    super()\n    this.state = {\n      loading: false,\n      names: []\n    }\n  }\n\n  render () {\n    if (!this.state.loading) {\n      return (\n        <div>\n          <Switch>\n            <Route exact path = '/' render={() => <HomePage names = {this.state.names} /> } />\n\n            {this.state.names.map((name) =>\n              <Route key={name} exact path = {'/' + name + '/'} render={(name) => <DetailedProduct key={name} name = {name}/>}/>\n            )}\n\n            <Route exact path = '/about/' component = {About} />\n            <Route exact path = '/contact/' component = {Contact} />\n          </Switch>\n        </div>\n      )\n    } else {\n      return (\n        <div>\n          <div className=\"sweet-loading\">\n            <ClipLoader\n              css={override}\n              size={150}\n              color={'#123abc'}\n              loading={!this.state.loading}\n            />\n          </div>\n        </div>\n      )\n    }\n  }\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}